//根据主色调计算的几种颜色，乘以亮度防止比较适中的颜色淡化过浅/深
.a() when (lightness(@main-base)>50%){
  @main-darker:darken(@main-base, 0.135*lightness(@main-base));
  @main-dark:darken(@main-base, 0.2*lightness(@main-base));
  @main-middle:darken(@main-base, 0.335*lightness(@main-base));
  @main-light:darken(@main-base, 0.467*lightness(@main-base));
  @main-lighter:darken(@main-base, 0.75*lightness(@main-base));
}
.a() when (lightness(@main-base)=<50%){
  @main-darker:lighten(@main-base, 0.135*(100 - lightness(@main-base)));
  @main-dark:lighten(@main-base, 0.2*(100 - lightness(@main-base)));
  @main-middle:lighten(@main-base, 0.335*(100 - lightness(@main-base)));
  @main-light:lighten(@main-base, 0.467*(100 - lightness(@main-base)));
  @main-lighter:lighten(@main-base, 0.75*(100 - lightness(@main-base)));
}
.compute-text(@n) when (iscolor(@n)) {
  p {
    a {
      color: @a;
    }
  }
  & when (lightness(@n) <= 50%) {
    color: #fff;
  }
  & when (lightness(@n) > 50%) {
    color: #333;
  }
  textarea, input, [contenteditable]{
    background-color: #fff;
    color: #333;
  }  
}

//页面内容中设置较小颜色差异的块
.mixin (@n) when (iscolor(@n)) {
  & when (lightness(@n) >= 50%) {
    background-color: darken(@n, 10%);
    border-color: darken(@n, 10%);
  }
  & when (lightness(@n) < 50%) {
    background-color: lighten(@n, 10%);
    border-color: lighten(@n, 10%);
  }
}
//块中再次设置颜色差异
.mixin2 (@n) when (iscolor(@n)) {
  & when (lightness(@n) >= 50%) {
    background-color: difference(darken(@n, 10%), #111);
    border-color: difference(darken(@n, 10%), #111);
  }
  & when (lightness(@n) < 50%) {
    background-color: difference(lighten(@n, 10%), #111);
    border-color: difference(lighten(@n, 10%), #111);
  }
}

//取反色
.diff (@n) when (iscolor(@n)) {
  background-color: difference(@n, #fff);
  color: @n;
}

//高级设置颜色调用方法
.bg(@n) when(iscolor(@n)){
  background-color: @n;
}
.bg-compute-text(@n) when(iscolor(@n)){
  .bg(@n);
  .compute-text(@n);
}
.color(@n) when(iscolor(@n)){
  color: @n;
}
.lightencolor(@n) when (iscolor(@n)){
  color: lighten(@n, 10%);
}
.link(@n) when(iscolor(@n)){
  color: @n;
  &:hover{
    color: darken(@n, 15%);
  }
}
.fill(@n) when (iscolor(@n)){
  fill: @n;
}
.disabled(@n) when (iscolor(@n)) {
  background-color: @n;
  & when (lightness(@n) <= 50%) {
    color: #fff;
    border-color: darken(@n, 10%)
  }
  & when (lightness(@n) > 50%) {
    color: #333;
    border-color: lighten(@n, 10%)
  }  
}
 
.secondary() {
  color: @main-light;
  .color(@detail-secondary);
}
.secondary-lighter() {
  color: @main-lighter;
  .lightencolor(@detail-secondary);  
}

.border-color(@n) when(iscolor(@n)){
  border-color:@n;
}
.border-left-color(@n) when(iscolor(@n)){
  border-color:@n;
}

//一些没法修改css的插件，调用以下方法去hack
.hack-border(@m,@n){
  border: 1px solid @m;
  & when (iscolor(@n)){
    border: 1px solid @n;
  }
}
.hack-border-left(@m,@n){
  border-left: 1px solid @m;
  & when (iscolor(@n)){
    border-left: 1px solid @n;
  }
}
.hack-border-right(@m,@n){
  border-right: 1px solid @m;
  & when (iscolor(@n)){
    border-right: 1px solid @n;
  }
}
.hack-border-top(@m,@n){
  border-top: 1px solid @m;
  & when (iscolor(@n)){
    border-top: 1px solid @n;
  }
}
.hack-border-bottom(@m,@n){
  border-bottom: 1px solid @m;
  & when (iscolor(@n)){
    border-bottom: 1px solid @n;
  }
}

//用于bootstrap按钮组预览
.button-variant(@color; @background; @border) {
  color: @color;
  background-color: @background;
  border-color: @border;

  &:focus,
  &.focus {
    color: @color;
    background-color: darken(@background, 10%);
    border-color: darken(@border, 25%);
  }
  &:hover {
    color: @color;
    background-color: darken(@background, 10%);
    border-color: darken(@border, 12%);
  }
  &:active,
  &.active,
  .open > .dropdown-toggle& {
    color: @color;
    background-color: darken(@background, 10%);
    border-color: darken(@border, 12%);

    &:hover,
    &:focus,
    &.focus {
      color: @color;
      background-color: darken(@background, 17%);
      border-color: darken(@border, 25%);
    }
  }
  &:active,
  &.active,
  .open > .dropdown-toggle& {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: @background;
      border-color: @border;
    }
  }

  .badge {
    color: @background;
    background-color: @color;
  }
}

@import "secondary"; //用于设置bootstrap里的一些变量方法
