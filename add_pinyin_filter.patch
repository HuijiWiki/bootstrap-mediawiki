From cb12d64cd5f6a47c94e724d733ac3bda416b5946 Mon Sep 17 00:00:00 2001
From: c86jeff <zhangjiexin0101@gmail.com>
Date: Wed, 27 Jul 2016 18:27:03 +0800
Subject: [PATCH] add pinyin filter

---
 includes/Maintenance/AnalysisConfigBuilder.php | 87 +++++++++-----------------
 1 file changed, 31 insertions(+), 56 deletions(-)

diff --git a/includes/Maintenance/AnalysisConfigBuilder.php b/includes/Maintenance/AnalysisConfigBuilder.php
index 626483d..97bc284 100644
--- a/includes/Maintenance/AnalysisConfigBuilder.php
+++ b/includes/Maintenance/AnalysisConfigBuilder.php
@@ -2,11 +2,9 @@
 
 namespace CirrusSearch\Maintenance;
 
-use CirrusSearch\SearchConfig;
-use CirrusSearch\Searcher;
-use Hooks;
-use Language;
-use MediaWiki\MediaWikiServices;
+use \CirrusSearch\Searcher;
+use \Hooks;
+use \Language;
 
 /**
  * Builds elasticsearch analysis config arrays.
@@ -36,7 +34,8 @@ class AnalysisConfigBuilder {
 	const VERSION = '0.10';
 
 	/**
-	 * @var string Language code we're building analysis for
+	 * Language code we're building analysis for
+	 * @var string
 	 */
 	private $language;
 
@@ -46,21 +45,11 @@ class AnalysisConfigBuilder {
 	private $icu;
 
 	/**
-	 * @var array Similarity algo (tf/idf, bm25, etc) configuration
-	 */
-	private $similarity;
-
-	/**
-	 * @var SearchConfig cirrus config
-	 */
-	protected $config;
-
-	/**
+	 * Constructor
 	 * @param string $langCode The language code to build config for
-	 * @param string[] $plugins list of plugins installed in Elasticsearch
-	 * @param SearchConfig $config
+	 * @param array(string) $plugins list of plugins installed in Elasticsearch
 	 */
-	public function __construct( $langCode, array $plugins, SearchConfig $config = null ) {
+	public function __construct( $langCode, $plugins ) {
 		$this->language = $langCode;
 		foreach ( $this->elasticsearchLanguageAnalyzersFromPlugins as $plugin => $extra ) {
 			if ( in_array( $plugin, $plugins ) ) {
@@ -68,18 +57,10 @@ class AnalysisConfigBuilder {
 			}
 		}
 		$this->icu = in_array( 'analysis-icu', $plugins );
-		if ( is_null ( $config ) ) {
-			$config = MediaWikiServices::getInstance()
-				->getConfigFactory()
-				->makeConfig( 'CirrusSearch' );
-		}
-		$this->similarity = $config->get( 'CirrusSearchSimilarityProfile' );
-		$this->config = $config;
 	}
 
 	/**
 	 * Build the analysis config.
-	 *
 	 * @return array the analysis config
 	 */
 	public function buildConfig() {
@@ -89,25 +70,12 @@ class AnalysisConfigBuilder {
 	}
 
 	/**
-	 * Build the similarity config
-	 *
-	 * @return array|null the similarity config
-	 */
-	public function buildSimilarityConfig() {
-		if ( $this->similarity != null && isset ( $this->similarity['similarity'] ) ) {
-			return $this->similarity['similarity'];
-		}
-		return null;
-	}
-
-	/**
 	 * Build an analysis config with sane defaults.
-	 *
-	 * @return array
 	 */
 	private function defaults() {
 		$defaults = array(
 			'analyzer' => array(
+							
 				'text' => array(
 					'type' => $this->getDefaultTextAnalyzerType(),
 					'char_filter' => array( 'word_break_helper' ),
@@ -181,6 +149,12 @@ class AnalysisConfigBuilder {
 				),
 			),
 			'filter' => array(
+				'pinyin_filter' => array(
+					'type' => 'pinyin',
+					'padding_char'=>'',
+					'first_letter'=>'none',
+				),
+				
 				'suggest_shingle' => array(
 					'type' => 'shingle',
 					'min_shingle_size' => 2,
@@ -234,7 +208,7 @@ class AnalysisConfigBuilder {
 						'\u2019=>\u0020',  // Unicode right single quote
 						'\u02BC=>\u0020',  // Unicode modifier letter apostrophe
 						'_=>\u0020',       // Mediawiki loves _ and people are used to it but it usually means space
-						'-=>\u0020',       // Useful for finding hyphenated names unhyphenated
+						'-=>\u0020',       // Useful for finding hypenated names unhypenated
 					),
 				),
 				// Converts things that don't always count as word breaks into spaces which always
@@ -266,19 +240,30 @@ class AnalysisConfigBuilder {
 				'name' => 'nfkc_cf',
 			);
 		}
-
 		return $defaults;
 	}
 
 	/**
 	 * Customize the default config for the language.
-	 *
-	 * @param array $config
-	 * @return array
 	 */
 	private function customize( $config ) {
 		switch ( $this->getDefaultTextAnalyzerType() ) {
 		// Please add languages in alphabetical order.
+
+		case 'chinese':
+			$pinyin_analyzer = array(
+					'type' => 'custom',
+					'filter' => 'pinyin_filter',
+					'tokenizer' => 'ik',
+				);
+
+
+			$config[ 'analyzer' ][ 'text' ] = $pinyin_analyzer ;
+			$config[ 'analyzer' ][ 'text_search' ] =  $pinyin_analyzer ;
+			$config[ 'analyzer' ][ 'plain' ] =  $pinyin_analyzer ;
+			$config[ 'analyzer' ][ 'plain_search' ] =  $pinyin_analyzer ;
+			break;
+
 		case 'greek':
 			$config[ 'filter' ][ 'lowercase' ][ 'language' ] = 'greek';
 			break;
@@ -415,7 +400,6 @@ STEMMER_RULES
 	 * Pick the appropriate default analyzer based on the language.  Rather than think of
 	 * this as per language customization you should think of this as an effort to pick a
 	 * reasonably default in case CirrusSearch isn't customized for the language.
-	 *
 	 * @return string the analyzer type
 	 */
 	public function getDefaultTextAnalyzerType() {
@@ -447,8 +431,6 @@ STEMMER_RULES
 	 * other languages default to the default analyzer which isn't too good.  Note
 	 * that this array is sorted alphabetically by value and sourced from
 	 * http://www.elasticsearch.org/guide/reference/index-modules/analysis/lang-analyzer/
-	 *
-	 * @var string[]
 	 */
 	private $elasticsearchLanguageAnalyzers = array(
 		'ar' => 'arabic',
@@ -490,10 +472,6 @@ STEMMER_RULES
 		'th' => 'thai',
 	);
 
-
-	/**
-	 * @var array[]
-	 */
 	private $elasticsearchLanguageAnalyzersFromPlugins = array(
 		'analysis-stempel' => array( 'pl' => 'polish' ),
 		'analysis-kuromoji' => array( 'ja' => 'kuromoji' ),
@@ -504,9 +482,6 @@ STEMMER_RULES
 		// TODO Hebrew requires some special query handling....
 	);
 
-	/**
-	 * @return string MediaWiki language code
-	 */
 	public function getLanguage() {
 		return $this->language;
 	}
-- 
1.9.1

